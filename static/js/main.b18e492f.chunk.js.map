{"version":3,"sources":["n1_main/m1_ui/components/Main/Image/Image.module.scss","n1_main/m1_ui/components/Main/GroupedTags/GroupedTags.module.scss","n1_main/m1_ui/components/Header/Header.module.scss","n1_main/m3_dal/api.ts","n1_main/m2_bll/appReducer.ts","n1_main/m1_ui/components/common/Modal/Modal.tsx","n1_main/m1_ui/components/Main/Image/Image.tsx","n1_main/m1_ui/components/Main/GroupedTags/GroupedTags.tsx","n1_main/m1_ui/components/Main/Main.tsx","n1_main/m1_ui/components/Header/Header.tsx","n1_main/m1_ui/App.tsx","reportWebVitals.ts","n1_main/m2_bll/store.ts","index.tsx","n1_main/m1_ui/components/Main/Main.module.scss","n1_main/m1_ui/components/common/Modal/Modal.module.scss"],"names":["module","exports","instance","axios","create","baseURL","appAPI","tag","get","initialState","status","images","responseMessage","uniqueTagsNames","setImageAC","id","image_url","type","setAppStatusAC","setResponseMessageAC","message","getImageTC","tagsString","dispatch","a","tags","split","promises","map","Promise","all","res","imgA","data","imgB","sumImgUrl","length","toLowerCase","Modal","active","setActive","text","className","styles","modal","onClick","modalContent","modalContentActive","e","stopPropagation","Image","React","memo","props","image","img","imgComposite","src","handlerSetTagValueInput","alt","GroupedTags","useSelector","state","app","uniqueTag","i","groupedTags","filter","index","Main","useDispatch","appStatus","useState","modalActive","setModalActive","isGroup","setIsGroup","formik","useFormik","initialValues","validate","values","errors","test","onSubmit","someArray","setInterval","some","Math","floor","random","setFieldValue","mainBlock","mainContainer","handleSubmit","form","placeholder","onChange","handleChange","name","value","load","disabled","setTimeout","clear","resetForm","group","Header","header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","find","t","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b18e492f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Image_image__15mkD\",\"img\":\"Image_img__1UAoH\",\"imgComposite\":\"Image_imgComposite__1bJco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groupedTags\":\"GroupedTags_groupedTags__mUxs_\",\"uniqueTag\":\"GroupedTags_uniqueTag__191ad\",\"images\":\"GroupedTags_images__3X1SC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3MFKn\"};","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://api.giphy.com/v1/gifs/`,\r\n})\r\n\r\nconst API_KEY = \"gTJAO48YcpmrADUyo4opy4ES4g7iDBxx\"\r\n\r\nexport const appAPI = {\r\n    getImage(tag: string) {\r\n        return instance.get(`random?api_key=${API_KEY}&tag=${tag}`)\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {appAPI} from \"../m3_dal/api\";\r\n\r\nconst initialState = {\r\n    status: \"idle\" as RequestStatusType,\r\n    images: [] as Array<ImageType>,\r\n    responseMessage: \"\",\r\n    uniqueTagsNames: [] as Array<string>\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET_STATUS\":\r\n            return {...state, status: action.status}\r\n        case \"APP/SET_IMAGE\":\r\n            return {...state, images: [...state.images, {id: action.id, image_url: action.image_url, tag: action.tag}]}\r\n        case \"APP/REMOVE_IMAGE\":\r\n            return {...state, images: [], uniqueTagsNames: []}\r\n        case \"APP/SET_RESPONSE_MESSAGE\":\r\n            return {...state, responseMessage: action.message}\r\n        case \"APP/SET_UNIQUE_TAG_NAME\":\r\n            if (state.uniqueTagsNames.length) {\r\n                if (state.uniqueTagsNames.find(t => t === action.tag)) {\r\n                    return state\r\n                } else {\r\n                    return {...state, uniqueTagsNames: [...state.uniqueTagsNames, action.tag]}\r\n                }\r\n            }\r\n            return {...state, uniqueTagsNames: [action.tag]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setImageAC = (id: string, image_url: Array<string>, tag: string) => ({type: \"APP/SET_IMAGE\", id, image_url, tag} as const)\r\nconst setUniqueTagNameAC = (tag: string) => ({type: \"APP/SET_UNIQUE_TAG_NAME\", tag} as const)\r\nexport const removeImageAC = () => ({type: \"APP/REMOVE_IMAGE\"} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: \"APP/SET_STATUS\", status} as const)\r\nexport const setResponseMessageAC = (message: string) => ({type: \"APP/SET_RESPONSE_MESSAGE\", message} as const)\r\nexport const setCompositeImageAC = (imgI: string, imgB: string) => ({type: \"APP/SET_COMPOSITE_IMAGE\", imgI, imgB} as const)\r\n\r\nexport const getImageTC = (tagsString: string) => async (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    try {\r\n        const tags = tagsString.split(',')\r\n        const promises = tags.map(tag => {\r\n            return tag ? appAPI.getImage(tag) : null\r\n        })\r\n\r\n        const res = await Promise.all(promises)\r\n        let imgA = res[0]\r\n        let {id, image_url} = imgA?.data.data\r\n        let imgB = res[1]\r\n        let sumImgUrl = [image_url, imgB?.data.data.image_url ? imgB?.data.data.image_url : null]\r\n\r\n        if (imgA?.data.data.length === 0 || imgB?.data.data.length === 0) {\r\n            dispatch(setResponseMessageAC(\"По тегу ничего не найдено\"))\r\n        } else {\r\n            dispatch(setImageAC(id, sumImgUrl, tagsString.toLowerCase()))\r\n            dispatch(setUniqueTagNameAC(tagsString.toLowerCase()))\r\n        }\r\n    } catch (e) {\r\n        dispatch(setResponseMessageAC(\"Произошла http ошибка\"))\r\n    }\r\n    dispatch(setAppStatusAC('succeeded'))\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof setAppStatusAC> |\r\n    ReturnType<typeof setImageAC> |\r\n    ReturnType<typeof removeImageAC> |\r\n    ReturnType<typeof setResponseMessageAC> |\r\n    ReturnType<typeof setUniqueTagNameAC> |\r\n    ReturnType<typeof setCompositeImageAC>\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed';\r\n\r\nexport type ImageType = {\r\n    id: string\r\n    image_url: Array<string>\r\n    tag: string\r\n}","import React from \"react\";\r\nimport styles from \"./Modal.module.scss\"\r\n\r\nexport const Modal = ({active, setActive, text}: any) => {\r\n    return (\r\n        <div className={active ? `${styles.modal} ${styles.active}` : styles.modal}\r\n             onClick={() => setActive(false)}>\r\n            <div className={active ? `${styles.modalContent} ${styles.modalContentActive}` : styles.modalContent}\r\n                 onClick={(e) => e.stopPropagation()}>\r\n                <p className={styles.text}>{text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {ImageType} from \"../../../../m2_bll/appReducer\";\r\nimport styles from \"./Image.module.scss\";\r\n\r\nimport React from \"react\";\r\n\r\nexport const Image = React.memo((props: PropsType) => {\r\n    return (\r\n        <div className={styles.image}>\r\n            <img className={props.image.image_url[1] === null ? styles.img : styles.imgComposite}\r\n                 src={props.image.image_url[0]}\r\n                 onClick={() => props.handlerSetTagValueInput(props.image.tag)} alt={props.image.tag}/>\r\n            {\r\n                props.image.image_url[1] !== null\r\n                    ? <img className={styles.imgComposite} src={props.image.image_url[1]}\r\n                           onClick={() => props.handlerSetTagValueInput(props.image.tag)} alt={props.image.tag}/>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\ntype PropsType = {\r\n    handlerSetTagValueInput: (tag: string) => void\r\n    image: ImageType\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../m2_bll/store\";\r\nimport {ImageType} from \"../../../../m2_bll/appReducer\";\r\nimport styles from \"./GroupedTags.module.scss\";\r\nimport {Image} from \"../Image/Image\";\r\n\r\nexport const GroupedTags = React.memo((props: PropsType) => {\r\n\r\n    const uniqueTagsNames = useSelector<AppRootStateType, Array<string>>(state => state.app.uniqueTagsNames)\r\n    const images = useSelector<AppRootStateType, Array<ImageType>>(state => state.app.images)\r\n\r\n    return (\r\n        <>\r\n            {uniqueTagsNames\r\n            && uniqueTagsNames.map((uniqueTag, i) =>\r\n                <div className={styles.groupedTags} key={i}>\r\n                    <h3 className={styles.uniqueTag}>{uniqueTag}</h3>\r\n                    <div className={styles.images}>\r\n                        {images\r\n                        && images.filter(img => img.tag === uniqueTag)\r\n                            .map((img, index) =>\r\n                                <Image handlerSetTagValueInput={props.handlerSetTagValueInput} image={img}\r\n                                       key={`${img.id} ${index}`}/>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n})\r\n\r\ntype PropsType = {\r\n    handlerSetTagValueInput: (tag: string) => void\r\n}","import React, {useState} from \"react\";\r\nimport styles from \"./Main.module.scss\"\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getImageTC, ImageType, removeImageAC, RequestStatusType, setResponseMessageAC} from \"../../../m2_bll/appReducer\";\r\nimport {AppRootStateType} from \"../../../m2_bll/store\";\r\nimport {Modal} from \"../common/Modal/Modal\";\r\nimport {GroupedTags} from \"./GroupedTags/GroupedTags\";\r\nimport {Image} from \"./Image/Image\";\r\n\r\nexport const Main = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const images = useSelector<AppRootStateType, Array<ImageType>>(state => state.app.images)\r\n    const appStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n    const responseMessage = useSelector<AppRootStateType, string>(state => state.app.responseMessage)\r\n    const [modalActive, setModalActive] = useState(false)\r\n    const [isGroup, setIsGroup] = useState(false)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            tag: \"\"\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.tag) {\r\n                errors.tag = \"Заполните поле 'тег'\"\r\n            } else if (!/^[a-z, ]+$/i.test(values.tag)) {\r\n                errors.tag = \"Разрешены только буквы латинского алфавита\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            if (values.tag !== \"delay\") {\r\n                dispatch(getImageTC(values.tag))\r\n            } else {\r\n                let someArray = [\"cat\", \"dog\", \"car\", \"cat, dog\", \"cat, car\", \"dog, car\"]\r\n                setInterval(() => {\r\n                    let some = Math.floor(Math.random() * someArray.length)\r\n                    dispatch(getImageTC(someArray[some]))\r\n                }, 5000)\r\n            }\r\n        }\r\n    })\r\n    //Обработчик onSubmit формика и активация модалки\r\n    const formikHandleSubmit = () => {\r\n\r\n        if (formik.errors || !formik.values.tag) {\r\n            formik.errors.tag && dispatch(setResponseMessageAC(formik.errors.tag))\r\n            setTimeout(() => dispatch(setResponseMessageAC(\"\")), 4000)\r\n            setModalActive(true)\r\n        } else {\r\n            setModalActive(false)\r\n            formik.handleSubmit()\r\n        }\r\n    }\r\n    // Обработчик удаления изображений из стейта\r\n    const handlerRemoveImages = () => {\r\n        dispatch(removeImageAC())\r\n        formik.resetForm()\r\n    }\r\n    //Обработчик установки тега в инпут\r\n    const handlerSetTagValueInput = (tag: string) => {\r\n        formik.setFieldValue(\"tag\", tag)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.mainBlock}>\r\n            {\r\n                responseMessage\r\n                    ? <Modal active={modalActive} setActive={setModalActive} text={responseMessage}/>\r\n                    : null\r\n            }\r\n            <div className={styles.mainContainer}>\r\n                <form onSubmit={formik.handleSubmit} className={styles.form}>\r\n                    <input type=\"text\" placeholder=\"введите тег\"\r\n                           onChange={formik.handleChange} name={\"tag\"} value={formik.values.tag}/>\r\n                    <button className={styles.load} value={\"send\"} disabled={appStatus === \"loading\"}\r\n                            onClick={formikHandleSubmit} type={\"submit\"}>\r\n                        {appStatus === \"loading\" ? \"Загрузка...\" : \"Загрузить\"}\r\n                    </button>\r\n                    <button className={styles.clear} type={\"button\"} onClick={handlerRemoveImages}>Очистить</button>\r\n                    {!isGroup\r\n                        ? <button className={styles.group} type={\"button\"}\r\n                                  onClick={() => setIsGroup(true)}>Группировать</button>\r\n                        : <button className={styles.group} type={\"button\"}\r\n                                  onClick={() => setIsGroup(false)}>Разгруппировать</button>}\r\n                </form>\r\n                {\r\n                    !isGroup\r\n                        ? <div className={styles.images}>\r\n                            {images && images.map((img, index) =>\r\n                                <Image handlerSetTagValueInput={handlerSetTagValueInput} image={img}\r\n                                       key={`${img.id} ${index}`}/>\r\n                            )}\r\n                        </div>\r\n                        : <GroupedTags handlerSetTagValueInput={handlerSetTagValueInput}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype FormikErrorType = {\r\n    tag?: string\r\n}","import React from \"react\";\r\nimport styles from \"./Header.module.scss\"\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={styles.header}>\r\n            <h1>Header</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport styles from './App.module.scss';\nimport {Main} from \"./components/Main/Main\";\nimport {Header} from \"./components/Header/Header\";\n\nexport const App = () => {\n    return (\n        <div className={styles.app}>\n            <Header/>\n            <Main/>\n        </div>\n    );\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {appReducer} from \"./appReducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './n1_main/m1_ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./n1_main/m2_bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Main_mainBlock__5aICz\",\"mainContainer\":\"Main_mainContainer__KoDBs\",\"form\":\"Main_form__3hcEP\",\"load\":\"Main_load__2A8OV\",\"clear\":\"Main_clear__2PnN6\",\"group\":\"Main_group__3R4OT\",\"images\":\"Main_images__KzOY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1kS8s\",\"modalContent\":\"Modal_modalContent__2GV_h\",\"text\":\"Modal_text__2r-Su\",\"modalContentActive\":\"Modal_modalContentActive__3QTwg\",\"active\":\"Modal_active__IM28W\"};"],"sourceRoot":""}